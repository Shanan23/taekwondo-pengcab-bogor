<%- include('../partials/admin-header') %>

<div class="container-fluid py-4">
  <div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="h3 mb-0 text-gray-800">Taekwondoin Management</h1>
    <a href="/admin/members/create" class="btn btn-primary">
      <i class="fas fa-plus-circle"></i> Add New Member
    </a>
  </div>

  <% if(messages.success) { %>
    <div class="alert alert-success alert-dismissible fade show" role="alert">
      <%= messages.success %>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
  <% } %>

  <% if(messages.error) { %>
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
      <%= messages.error %>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
  <% } %>

  <!-- Filter Card -->
  <div class="card shadow mb-4">
    <div class="card-header py-3">
      <h6 class="m-0 font-weight-bold text-primary">Filter Members</h6>
    </div>
    <div class="card-body">
      <div class="row g-3">
        <div class="col-md-4">
          <label for="filter-unit" class="form-label">Unit</label>
          <select class="form-select" id="filter-unit">
            <option value="">All Units</option>
            <% if(members && members.length > 0) { %>
              <% 
                const units = [...new Set(members.map(member => member.Unit ? member.Unit.name : null).filter(Boolean))];
                units.forEach(unit => { 
              %>
                <option value="<%= unit %>"><%= unit %></option>
              <% }); %>
            <% } %>
          </select>
        </div>
        <div class="col-md-4">
          <label for="filter-belt" class="form-label">Belt Rank</label>
          <select class="form-select" id="filter-belt">
            <option value="">All Ranks</option>
            <option value="white">White</option>
            <option value="yellow">Yellow</option>
            <option value="green">Green</option>
            <option value="blue">Blue</option>
            <option value="red">Red</option>
            <option value="black">Black</option>
          </select>
        </div>
        <div class="col-md-4">
          <label for="search-member" class="form-label">Search</label>
          <div class="input-group">
            <input type="text" class="form-control" id="search-member" placeholder="Search by name or ID">
            <button class="btn btn-outline-secondary" type="button" id="search-button">
              <i class="fas fa-search"></i>
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Members Table -->
  <div class="card shadow mb-4">
    <div class="card-header py-3">
      <h6 class="m-0 font-weight-bold text-primary">Members List</h6>
    </div>
    <div class="card-body">
      <div class="table-responsive">
        <table class="table table-bordered table-hover" id="membersTable" width="100%" cellspacing="0">
          <thead>
            <tr>
              <th>ID</th>
              <th>Name</th>
              <th>Unit</th>
              <th>Belt Rank</th>
              <th>Date of Birth</th>
              <th>Join Date</th>
              <th>Status</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            <% if(members && members.length > 0) { %>
              <% members.forEach(member => { %>
                <tr>
                  <td><%= member.memberId %></td>
                  <td>
                    <div class="d-flex align-items-center">
                      <% if(member.photo) { %>
                        <img src="<%= member.photo %>" alt="<%= member.name %>" class="rounded-circle me-2" style="width: 40px; height: 40px; object-fit: cover;">
                      <% } else { %>
                        <div class="rounded-circle me-2 d-flex align-items-center justify-content-center bg-secondary text-white" style="width: 40px; height: 40px;">
                          <%= member.name.charAt(0).toUpperCase() %>
                        </div>
                      <% } %>
                      <%= member.name %>
                    </div>
                  </td>
                  <td><%= member.Unit ? member.Unit.name : 'N/A' %></td>
                  <td>
                    <% const beltColors = {
                      white: 'light',
                      yellow: 'warning',
                      green: 'success',
                      blue: 'primary',
                      red: 'danger',
                      black: 'dark'
                    } %>
                    <span class="badge bg-<%= beltColors[member.beltRank] || 'secondary' %>">
                      <%= member.beltRank.charAt(0).toUpperCase() + member.beltRank.slice(1) %>
                      <% if(member.beltRank === 'black' && member.danLevel) { %>
                        Dan <%= member.danLevel %>
                      <% } %>
                    </span>
                  </td>
                  <td><%= new Date(member.dateOfBirth).toLocaleDateString() %></td>
                  <td><%= new Date(member.joinDate).toLocaleDateString() %></td>
                  <td>
                    <% if(member.active) { %>
                      <span class="badge bg-success">Active</span>
                    <% } else { %>
                      <span class="badge bg-secondary">Inactive</span>
                    <% } %>
                  </td>
                  <td>
                    <div class="btn-group" role="group">
                      <a href="/admin/members/edit/<%= member.id %>" class="btn btn-sm btn-primary">
                        <i class="fas fa-edit"></i>
                      </a>
                      <button type="button" class="btn btn-sm btn-danger delete-member" data-id="<%= member.id %>">
                        <i class="fas fa-trash"></i>
                      </button>
                      <button type="button" class="btn btn-sm btn-info view-member" data-id="<%= member.id %>">
                        <i class="fas fa-eye"></i>
                      </button>
                    </div>
                  </td>
                </tr>
              <% }) %>
            <% } else { %>
              <tr>
                <td colspan="8" class="text-center">No members found</td>
              </tr>
            <% } %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteMemberModal" tabindex="-1" aria-labelledby="deleteMemberModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="deleteMemberModalLabel">Confirm Delete</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        Are you sure you want to delete this member? This action cannot be undone.
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-danger" id="confirmDeleteMember">Delete</button>
      </div>
    </div>
  </div>
</div>

<!-- Member View Modal -->
<div class="modal fade" id="viewMemberModal" tabindex="-1" aria-labelledby="viewMemberModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="viewMemberModalLabel">Member Details</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="text-center mb-4">
          <div id="memberModalPhoto" class="rounded-circle mx-auto mb-3 d-flex align-items-center justify-content-center bg-secondary text-white" style="width: 100px; height: 100px; object-fit: cover; font-size: 40px;">
          </div>
          <h4 id="memberModalName"></h4>
          <p class="mb-1">ID: <span id="memberModalId"></span></p>
          <div id="memberModalStatus"></div>
        </div>
        
        <div class="row mt-4">
          <div class="col-md-6">
            <h5>Personal Information</h5>
            <p><strong>Date of Birth:</strong> <span id="memberModalDob"></span></p>
            <p><strong>Gender:</strong> <span id="memberModalGender"></span></p>
            <p><strong>Address:</strong> <span id="memberModalAddress"></span></p>
            <p><strong>Phone:</strong> <span id="memberModalPhone"></span></p>
            <p><strong>Email:</strong> <span id="memberModalEmail"></span></p>
          </div>
          <div class="col-md-6">
            <h5>Taekwondo Information</h5>
            <p><strong>Unit:</strong> <span id="memberModalUnit"></span></p>
            <p><strong>Belt Rank:</strong> <span id="memberModalBelt"></span></p>
            <p><strong>Join Date:</strong> <span id="memberModalJoinDate"></span></p>
            <p><strong>Last Promotion:</strong> <span id="memberModalLastPromotion"></span></p>
          </div>
        </div>
        
        <div class="row mt-3">
          <div class="col-12">
            <h5>Additional Information</h5>
            <p><strong>Notes:</strong></p>
            <div id="memberModalNotes" class="p-2 bg-light rounded"></div>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <a id="memberModalEditBtn" href="#" class="btn btn-primary">Edit</a>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Initialize DataTable
    const membersTable = $('#membersTable').DataTable({
      order: [[1, 'asc']] // Order by name
    });
    
    // Filtering
    $('#filter-unit, #filter-belt').on('change', function() {
      const unitFilter = $('#filter-unit').val().toLowerCase();
      const beltFilter = $('#filter-belt').val();
      
      $.fn.dataTable.ext.search.push(function(settings, data, dataIndex) {
        const unit = data[2].toLowerCase(); // Unit is in column 2
        const belt = data[3].toLowerCase(); // Belt is in column 3
        
        const unitMatch = !unitFilter || unit.includes(unitFilter);
        const beltMatch = !beltFilter || belt.includes(beltFilter);
        
        return unitMatch && beltMatch;
      });
      
      membersTable.draw();
      
      // Clear the custom filter
      $.fn.dataTable.ext.search.pop();
    });
    
    // Search functionality
    $('#search-button').on('click', function() {
      const searchTerm = $('#search-member').val().toLowerCase();
      membersTable.search(searchTerm).draw();
    });
    
    $('#search-member').on('keyup', function(e) {
      if (e.key === 'Enter') {
        const searchTerm = $(this).val().toLowerCase();
        membersTable.search(searchTerm).draw();
      }
    });
    
    // Delete member functionality
    let memberIdToDelete = null;
    $('.delete-member').on('click', function() {
      memberIdToDelete = $(this).data('id');
      $('#deleteMemberModal').modal('show');
    });
    
    $('#confirmDeleteMember').on('click', function() {
      if (!memberIdToDelete) return;
      
      fetch(`/admin/members/${memberIdToDelete}`, {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json'
        }
      })
      .then(response => response.json())
      .then(data => {
        $('#deleteMemberModal').modal('hide');
        
        if (data.success) {
          // Show success message and remove the row
          const alertDiv = document.createElement('div');
          alertDiv.className = 'alert alert-success alert-dismissible fade show';
          alertDiv.setAttribute('role', 'alert');
          alertDiv.innerHTML = `
            ${data.message}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
          `;
          
          document.querySelector('.container-fluid').insertBefore(
            alertDiv,
            document.querySelector('.card')
          );
          
          // Remove the row from the table
          membersTable.row($(`.delete-member[data-id="${memberIdToDelete}"]`).closest('tr')).remove().draw();
        } else {
          alert(data.message || 'Failed to delete member');
        }
      })
      .catch(error => {
        console.error('Error deleting member:', error);
        $('#deleteMemberModal').modal('hide');
        alert('Failed to delete member. Please try again.');
      });
    });
    
    // View member details
    $('.view-member').on('click', function() {
      const memberId = $(this).data('id');
      const row = $(this).closest('tr');
      
      // Extract data from the row
      const memberData = {
        id: memberId,
        memberId: row.find('td:eq(0)').text(), // ID
        name: row.find('td:eq(1)').text().trim(), // Name
        unit: row.find('td:eq(2)').text(), // Unit
        beltRank: row.find('td:eq(3)').text().trim(), // Belt rank
        dateOfBirth: row.find('td:eq(4)').text(), // Date of birth
        joinDate: row.find('td:eq(5)').text(), // Join date
        active: row.find('td:eq(6)').text().trim() === 'Active', // Status
        photo: row.find('td:eq(1) img').attr('src') // Photo
      };
      
      // Set data in the modal
      $('#memberModalName').text(memberData.name);
      $('#memberModalId').text(memberData.memberId);
      $('#memberModalDob').text(memberData.dateOfBirth);
      $('#memberModalJoinDate').text(memberData.joinDate);
      $('#memberModalUnit').text(memberData.unit);
      $('#memberModalBelt').text(memberData.beltRank);
      
      // Set the photo
      const photoElement = $('#memberModalPhoto');
      if (memberData.photo) {
        photoElement.html(`<img src="${memberData.photo}" class="img-fluid rounded-circle" style="width: 100px; height: 100px; object-fit: cover;">`);
      } else {
        photoElement.html(memberData.name.charAt(0).toUpperCase());
      }
      
      // Set the status badge
      $('#memberModalStatus').html(
        memberData.active ? 
          '<span class="badge bg-success">Active</span>' : 
          '<span class="badge bg-secondary">Inactive</span>'
      );
      
      // Set edit button link
      $('#memberModalEditBtn').attr('href', `/admin/members/edit/${memberData.id}`);
      
      // Show the modal
      $('#viewMemberModal').modal('show');
      
      // Fetch additional member details (you can implement this if needed)
      // fetchMemberDetails(memberId);
    });
    
    function fetchMemberDetails(memberId) {
      // This is optional if you want to fetch additional details from the server
      fetch(`/admin/members/${memberId}/details`)
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            const member = data.member;
            
            // Update additional fields
            $('#memberModalGender').text(member.gender === 'male' ? 'Male' : 'Female');
            $('#memberModalAddress').text(member.address || 'Not provided');
            $('#memberModalPhone').text(member.phone || 'Not provided');
            $('#memberModalEmail').text(member.email || 'Not provided');
            $('#memberModalLastPromotion').text(member.lastPromotion ? new Date(member.lastPromotion).toLocaleDateString() : 'Not recorded');
            $('#memberModalNotes').text(member.notes || 'No notes available');
          }
        })
        .catch(error => {
          console.error('Error fetching member details:', error);
        });
    }
  });
</script>

<%- include('../partials/admin-footer') %> 